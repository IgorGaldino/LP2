// <auto-generated />
using System;
using Atividade2EFCore.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Atividade2EFCore.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20190205193946_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("Atividade2EFCore.Agencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BancoId");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.ToTable("Agencias");
                });

            modelBuilder.Entity("Atividade2EFCore.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("Atividade2EFCore.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Atividade2EFCore.ContaCorrente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AgenciaId");

                    b.Property<double>("Saldo");

                    b.Property<string>("Titular");

                    b.HasKey("Id");

                    b.HasIndex("AgenciaId");

                    b.ToTable("ContasCorrente");
                });

            modelBuilder.Entity("Atividade2EFCore.ContaPoupanca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AgenciaId");

                    b.Property<DateTime>("DataAniversario");

                    b.Property<double>("Juros");

                    b.Property<double>("Saldo");

                    b.Property<string>("Titular");

                    b.HasKey("Id");

                    b.HasIndex("AgenciaId");

                    b.ToTable("ContasPoupanca");
                });

            modelBuilder.Entity("Atividade2EFCore.Solicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AgenciaId");

                    b.HasKey("Id");

                    b.HasIndex("AgenciaId");

                    b.ToTable("Solicitacoes");
                });

            modelBuilder.Entity("Atividade2EFCore.Agencia", b =>
                {
                    b.HasOne("Atividade2EFCore.Banco", "Banco")
                        .WithMany("Agencias")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Atividade2EFCore.ContaCorrente", b =>
                {
                    b.HasOne("Atividade2EFCore.Agencia")
                        .WithMany("ContasCorrente")
                        .HasForeignKey("AgenciaId");
                });

            modelBuilder.Entity("Atividade2EFCore.ContaPoupanca", b =>
                {
                    b.HasOne("Atividade2EFCore.Agencia")
                        .WithMany("ContasPoupanca")
                        .HasForeignKey("AgenciaId");
                });

            modelBuilder.Entity("Atividade2EFCore.Solicitacao", b =>
                {
                    b.HasOne("Atividade2EFCore.Agencia")
                        .WithMany("Solicitacoes")
                        .HasForeignKey("AgenciaId");
                });
#pragma warning restore 612, 618
        }
    }
}
